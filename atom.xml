<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JERRY&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-02-09T15:16:56.783Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Jerry Ren</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Basic Math For AI</title>
    <link href="http://example.com/2022/02/03/Basic-Math-For-AI/"/>
    <id>http://example.com/2022/02/03/Basic-Math-For-AI/</id>
    <published>2022-02-03T03:25:49.000Z</published>
    <updated>2022-02-09T15:16:56.783Z</updated>
    
    <content type="html"><![CDATA[<p>在简单的对python有了基础的了解之后，我们的下一步的目标是对机器学习和人工智能进行初步的了解，但是，需要知道的是，机器学习和人工智能中包含着大量的数学知识，如果不对这些基础的知识进行学习，日后的学习中将难以深入一些算法，因此在此处我们先对一些必须的基础数学知识进行了解。</p><p>首先我们应该了解到，<strong>人工智能模型</strong>可以被理解成一个<strong>多元函数</strong>，有输入<strong>X</strong>，模型<strong>f(x)<strong>和输出</strong>Y</strong>。如图：</p><p><img src="../pictures/image-20220205231110405.png" alt="image-20220205231110405"></p><p>其次，我们了解到，对于图片来说，每一个图片都是像素的<strong>三维矩阵</strong>，其中拥有红绿蓝(<em>RGB</em>)的三通道，如图：</p><p><img src="../pictures/image-20220206145122283.png" alt="image-20220206145122283"></p><p><img src="../pictures/image-20220206145208783.png" alt="image-20220206145208783"></p><p>关注，用A矩阵的转置和B矩阵相乘时：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x=np.linspace(<span class="number">1</span>,<span class="number">10</span>,<span class="number">1000</span>)<span class="comment">#将1到10分成1000份</span></span><br><span class="line">A=np.array([[<span class="number">5</span>,<span class="number">2</span>][<span class="number">4</span>,<span class="number">3</span>][<span class="number">1</span>,<span class="number">1</span>]])</span><br><span class="line">B=np.array([[<span class="number">2</span>,<span class="number">7</span>][<span class="number">9</span>,<span class="number">3</span>][<span class="number">1</span>,<span class="number">5</span>]])</span><br><span class="line">np.dot(A.T,B)</span><br><span class="line">np.dot(A,B.T)</span><br></pre></td></tr></table></figure><p>有关导数在机器学习中的应用：<strong>梯度下降</strong>,机器学习常常通过梯度下降来对模型函数进行优化。通过向函数上当前点的对应梯度（导数）的反方向的规定的步长距离点进行迭代搜索，直到在极小点收敛。</p><p>在深度学习中，如图像识别，大部分的识别结果都是一个<strong>概率</strong>，因此概率与统计也被成为<em>AI模型的评估和优化</em>，其中，我们用<strong>平均值</strong>和<strong>标准差</strong>来评估模型的表现（如猫狗识别）和优化输入数据（如预测房价对输入数据进行归一化）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成随机数</span></span><br><span class="line">np.random.randn(<span class="number">10000</span>)<span class="comment">#高斯分布，平均值为0，标准差为1</span></span><br><span class="line">np.random.randn(<span class="number">10000</span>)*<span class="number">2</span><span class="comment">#平均值为0，标准差为2</span></span><br><span class="line">np.random.randn(<span class="number">10000</span>)+<span class="number">1</span><span class="comment">#平均值为1，标准差为1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tmp=np.random.randn(<span class="number">10000</span>)</span><br><span class="line">np.<span class="built_in">sum</span>(tmp&gt;<span class="number">0</span>)<span class="comment">#接近5000</span></span><br></pre></td></tr></table></figure><p><img src="../pictures/image-20220207220907537.png" alt="image-20220207220907537"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#蒙特卡洛近似</span></span><br><span class="line">dots=np.random.rand(<span class="number">10000</span>,<span class="number">2</span>)<span class="comment">#等效为坐标</span></span><br><span class="line"><span class="comment">#随机分布一定位于0到1，而高斯分布则不是。</span></span><br><span class="line">rad=np.sqrt(dots[:,<span class="number">0</span>]**<span class="number">2</span>+dots[:,<span class="number">1</span>]**<span class="number">2</span>)<span class="comment">#通过x,y坐标平方取根求半径</span></span><br><span class="line">np.<span class="built_in">sum</span>(rad&lt;=<span class="number">1</span>)<span class="comment">#可以估算Π</span></span><br></pre></td></tr></table></figure><p>接着是机器学习与深度学习的模块，其中，<strong>深度学习</strong>包括：</p><ol><li>全连接神经网络。</li><li>卷积神经网络。</li><li>循环神经网络。</li></ol><p><strong>机器学习</strong>的本质：以数据为驱动，自主的从数据种寻找规律的方法。</p><ol><li>更少的人为假设和定义。</li><li>更灵活的应用。</li><li>更高的准确度。</li></ol><p>通过<strong>机器学习</strong>可以获得<strong>模型</strong>，常见的<strong>机器学习</strong>的方法有：</p><ol><li>非监督学习。(聚类)</li><li>监督学习。(分类，量化预测)</li><li>强化学习。(无初始数据)</li><li>优化。</li></ol><p><strong>回归</strong>：根据已有的数据，建立因变量Y和自变量X的定量（函数）关系的模型。</p><p>通过<strong>均方误差</strong>来评价回归模型的好坏。</p><p>求解线性回归有两个方法，分别是<strong>最小二乘法</strong>和<strong>梯度下降法</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">%pip install sklearn</span><br><span class="line"><span class="keyword">import</span> sklearn</span><br><span class="line">x=np.linspace(<span class="number">1</span>,<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line">y=<span class="number">5</span>*x+<span class="number">10</span>+<span class="number">10</span>*np.random.randn(<span class="number">100</span>)</span><br><span class="line">plt.plot(x,y,<span class="string">&quot;.k&quot;</span>)<span class="comment">#黑色点图</span></span><br></pre></td></tr></table></figure><p><img src="../pictures/image-20220208224733637.png" alt="image-20220208224733637"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line">model=LinearRegression()</span><br><span class="line"></span><br><span class="line">model.fit(x.reshape(<span class="number">100</span>,<span class="number">1</span>),y.reshape(<span class="number">100</span>,<span class="number">1</span>))<span class="comment">#若不进行reshape则无法进行运算</span></span><br><span class="line">y_p=model.predict(x.reshape(<span class="number">100</span>,<span class="number">1</span>))</span><br><span class="line">plt.plot(x,y,<span class="string">&quot;.k&quot;</span>)</span><br><span class="line">plt.plot(x,y_p,<span class="string">&quot;b&quot;</span>)<span class="comment">#蓝线</span></span><br></pre></td></tr></table></figure><p><img src="../pictures/image-20220209142350814.png" alt="image-20220209142350814"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模型预测：</span></span><br><span class="line">model.predict(np.array(<span class="number">10</span>).reshape(<span class="number">1</span>,<span class="number">1</span>))<span class="comment">#注意要进行reshape!</span></span><br></pre></td></tr></table></figure><p><strong>读入外部数据多元线性回归</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">data=pd.read_csv(<span class="string">&quot;data.csv&quot;</span>)</span><br><span class="line">x=data[:,<span class="number">1</span>:<span class="number">3</span>]<span class="comment">#1至3列</span></span><br><span class="line">y=data[:,<span class="number">3</span>]<span class="comment">#第三列</span></span><br><span class="line"></span><br><span class="line">form sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line">model=LinearRegression()</span><br><span class="line">model.fit(x,y)<span class="comment">#训练</span></span><br><span class="line"></span><br><span class="line">predict=model.predict(x)</span><br><span class="line">plt.plot(y,predict,<span class="string">&quot;.b&quot;</span>)<span class="comment">#真实值为x轴，预测值为y轴</span></span><br></pre></td></tr></table></figure><p><img src="../pictures/image-20220209164309337.png" alt="image-20220209164309337"></p><p>由此可见拟合度是较好的。</p><p>计算误差如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">diff=predict-y</span><br><span class="line">mae=np.mean(np.<span class="built_in">abs</span>(diff))<span class="comment">#平均误差</span></span><br><span class="line">rmse=np.sqrt(np.mean(diff**<span class="number">2</span>))<span class="comment">#均方误差</span></span><br></pre></td></tr></table></figure><p>关于<strong>逻辑运算</strong>：<strong>逻辑运算</strong>又称为布尔运算，是通过数学方法研究逻辑问题来建立了逻辑演算。</p><p><strong>布尔值</strong>：是(True,1)，否(False,0)</p><p><strong>逻辑运算</strong>常用来搭建AI配套模型来实现具体应用。</p><p><strong>深度强化学习</strong>：深度强化学习神经网络模型+强化学习方法。</p><p><strong>马尔科夫链</strong>：状态空间中经过从一个状态到另一个状态的转换的随机过程，下一状态的概率分布只能由当前状态决定，且与它前面的事件均无关。</p><p>数学表达为：</p><p><img src="../pictures/image-20220209223825640.png" alt="image-20220209223825640"></p><p>假设有三种天气状态（晴天、阴天、下雨），在第二天的状态只取决于前一天的天气状态。</p><ol><li>第一天晴天，第二天70%晴天，20%阴天，10%下雨。</li><li>第一天阴天，第二天40%晴天，40%阴天，20%下雨。</li><li>第一天下雨，第二天20%晴天，40%阴天，40%下雨。</li></ol><p><strong>状态转移矩阵</strong>可写为：</p><p><img src="../pictures/image-20220209225144605.png" alt="image-20220209225144605"></p><p>用已知概率和状态转移矩阵相乘，可以得到对应的预测的概率。</p><p>马尔科夫链<strong>收敛和平稳的条件</strong>：</p><ol><li>可能的状态数是有限的。</li><li>状态间的转移概率需要固定不变。</li><li>从任意状态能够转变到任意状态。</li><li>不能是简单的循环，例如全是从x到y再从y到x。</li></ol><p>关于<strong>马尔科夫奖励过程</strong>：<br>马尔科夫过程主要描述的是状态之间的转移关系，在各个状态的转移过程中赋予不同的奖励值就得到了马尔科夫奖励过程。有一个四元组组成(S,P,R,y)</p><p>S表示状态集合，P表示状态转移矩阵，R表示奖励函数，y表示衰减因子(0-1)。</p><p><strong>马尔科夫决策过程</strong>：相比于马尔科夫奖励过程多了一个动作A，A表示决策过程的集合。</p><p><strong>强化学习</strong>的目标就是最大化期望回报，相应的结果就是找到从状态空间S映射到动作空间A的最优策略。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在简单的对python有了基础的了解之后，我们的下一步的目标是对机器学习和人工智能进行初步的了解，但是，需要知道的是，机器学习和人工智能中包含着大量的数学知识，如果不对这些基础的知识进行学习，日后的学习中将难以深入一些算法，因此在此处我们先对一些必须的基础数学知识进行了解。</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Basic For Python</title>
    <link href="http://example.com/2022/01/19/Basic-For-Python/"/>
    <id>http://example.com/2022/01/19/Basic-For-Python/</id>
    <published>2022-01-19T09:48:28.000Z</published>
    <updated>2022-02-03T03:26:04.236Z</updated>
    
    <content type="html"><![CDATA[<p><strong>python</strong>开发环境的准备：<em>Anaconda</em>,<em>Jupyter Notebook</em>,<em>Spyder</em>。</p><p><em>Numpy</em>,<em>Pandas</em>,和<em>Matplotlib</em>的使用也是在<strong>python</strong>学习中非常重要的部分。</p><p>本人在按照教程安装完<strong>anaconda</strong>环境以及对应的<strong>ide</strong>：<em>jupyter notebook</em>之后开始正式的<strong>python</strong>的学习。</p><p>(<em>注</em>：在本篇博客中，仅对python的各个功能进行最基础的了解。)</p><p>首先是python的数据结构列表<strong>list</strong>,元组<strong>tuple</strong>，字典<strong>dict</strong>,集合<strong>set</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#列表</span></span><br><span class="line">l=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">&quot;hello&quot;</span>]</span><br><span class="line">l.append(<span class="string">&quot;world&quot;</span>)<span class="comment">#在列表的末尾插入元素</span></span><br><span class="line">l.extend([<span class="string">&quot;a&quot;</span>])<span class="comment">#在列表l末尾增加列表</span></span><br><span class="line">l.insert(<span class="number">0</span>,<span class="string">&quot;lol&quot;</span>)<span class="comment">#在列表指定位置插入元素</span></span><br><span class="line">l.remove(<span class="string">&quot;lol&quot;</span>)<span class="comment">#删除列表中出现的第一个lol</span></span><br><span class="line"><span class="keyword">del</span> l[<span class="number">3</span>]<span class="comment">#删除列表中对应位置的元素</span></span><br><span class="line">l.pop(<span class="number">4</span>)<span class="comment">#删除列表中对应位置的元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#特别注意！！</span></span><br><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">b=a</span><br><span class="line"><span class="comment">#此时如果对b表进行更改，a表也会随之更改，因此应该设置为：</span></span><br><span class="line">b=a.copy()</span><br><span class="line"></span><br><span class="line"><span class="comment">#元组</span></span><br><span class="line">a=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="comment">#元组中的元素不可被更改</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#字典</span></span><br><span class="line">d=&#123;<span class="string">&quot;Name&quot;</span>:<span class="string">&quot;Charlie&quot;</span>,<span class="string">&quot;Job&quot;</span>:<span class="string">&quot;Teacher&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(d[<span class="string">&quot;Name&quot;</span>])</span><br><span class="line">d[<span class="string">&quot;age&quot;</span>]=<span class="number">25</span><span class="comment">#添加</span></span><br><span class="line"><span class="keyword">del</span> d[<span class="string">&quot;age&quot;</span>]<span class="comment">#删除</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#集合</span></span><br><span class="line"><span class="built_in">set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">12</span>])</span><br><span class="line"><span class="comment">#set仅保留一次(去重)</span></span><br></pre></td></tr></table></figure><p>对于if语句，注意：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> a&lt;b:<span class="comment">#注意有冒号</span></span><br><span class="line">    c=<span class="number">10</span></span><br><span class="line"><span class="keyword">else</span>:<span class="comment">#注意有冒号</span></span><br><span class="line">    c=<span class="number">20</span></span><br></pre></td></tr></table></figure><p> 对于循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;<span class="number">10</span>:<span class="comment">#注意有冒号</span></span><br><span class="line">    i=i+<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line">s=<span class="string">&quot;abcdefg&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>关于函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sumoftwo</span>(<span class="params">x,y</span>):</span></span><br><span class="line">    result=x+y</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>文件的IO：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">file=<span class="built_in">open</span>(<span class="string">&quot;text.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)<span class="comment">#注意路径</span></span><br><span class="line">file.read()</span><br><span class="line">    file.read(<span class="number">100</span>)<span class="comment">#读入元素的个数</span></span><br><span class="line">    file.readline()<span class="comment">#读入行的行数</span></span><br><span class="line">    file.readlines()<span class="comment">#读入所有行</span></span><br><span class="line">file=<span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)<span class="comment">#覆盖</span></span><br><span class="line">file.write(<span class="string">&quot;你好&quot;</span>)</span><br><span class="line">file=<span class="built_in">open</span>(<span class="string">&quot;text.txt&quot;</span>,<span class="string">&quot;a&quot;</span>)<span class="comment">#加入</span></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file=<span class="built_in">open</span>(<span class="string">&quot;text.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p>python模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">time.time()<span class="comment">#显示时间从1970年1月1日0时0分0秒到现在</span></span><br><span class="line">time.sleep()<span class="comment">#停留时间</span></span><br><span class="line">time.strftime(<span class="string">&quot;%y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line"><span class="comment">#年月日时分秒</span></span><br><span class="line"><span class="keyword">import</span> time <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> strftime <span class="keyword">as</span> t</span><br><span class="line"><span class="comment">#简写</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.getcwd()<span class="comment">#查看当前文件盘</span></span><br><span class="line">os.listdir()<span class="comment">#查看某文件盘包含的文件</span></span><br><span class="line">os.listdir(os.getcwd())</span><br><span class="line">os.mkdir()<span class="comment">#生成新文件夹</span></span><br></pre></td></tr></table></figure><p>异常处理：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">except</span>:</span><br></pre></td></tr></table></figure><p>在这里可以等效为c++中的异常处理的的<strong>try</strong>和<strong>catch</strong>。</p><p>关于<strong>Numpy</strong>，<strong>Numpy</strong>是一个运行速度非常快的数学库，主要用与数组计算，包含：</p><ol><li>一个强大的N维数组对象。</li><li>广播功能函数。</li><li>整合代码的工具。</li><li>线性代数、傅里叶变化、随机数生成等功能。</li></ol><p>接着，本人在按照教程安装完<strong>numpy</strong>环境以及对应的<strong>ide</strong>：<em>spyder</em>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#载入numpy</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment">#定义ndarray</span></span><br><span class="line">a=np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">b=np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]])</span><br><span class="line">c=np.array([[<span class="number">1</span>,<span class="number">2.5</span>,<span class="number">3.14</span>][<span class="number">13.1</span>,<span class="number">2.6</span>,<span class="number">1.2</span>]])</span><br><span class="line">d=np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]])<span class="comment">#1*4二维数组</span></span><br><span class="line"><span class="comment">#查看指令</span></span><br><span class="line">a.size</span><br><span class="line">a.shape</span><br><span class="line">b.shape</span><br><span class="line">b.size</span><br><span class="line">b.ndim</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">np.arrange(<span class="number">20</span>)<span class="comment">#生成数字0-19</span></span><br><span class="line">np.linspace(<span class="number">0</span>,<span class="number">9</span>,<span class="number">10</span>)<span class="comment">#生成0-9的浮点数</span></span><br><span class="line">m=np.zeros([<span class="number">5</span>,<span class="number">5</span>])<span class="comment">#生成5*5的全0矩阵</span></span><br><span class="line">m=np.ones([<span class="number">5</span>,<span class="number">5</span>])<span class="comment">#生成5*5的全1矩阵</span></span><br><span class="line">m=np.random.rand(<span class="number">5</span>,<span class="number">5</span>)<span class="comment">#生成5*5的随机矩阵</span></span><br><span class="line">m=np.random.randn(<span class="number">3</span>，<span class="number">3</span>)<span class="comment">#生成3*3的高斯分布</span></span><br></pre></td></tr></table></figure><p>有关矩阵的运算：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">b=a.copy()</span><br><span class="line">c=a+b<span class="comment">#[2,4,6]</span></span><br><span class="line">c=a*b<span class="comment">#[1,4,9]</span></span><br><span class="line">d=np.dot(a,b)<span class="comment">#[1,4,9]</span></span><br><span class="line"><span class="comment">#注意reshape元素数量要一致！</span></span><br><span class="line">ax=np.reshape(a,(<span class="number">3</span>,<span class="number">1</span>))<span class="comment">#更改矩阵</span></span><br><span class="line">bx=np.reshape(b,(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line">np.dot(ax,bx)<span class="comment">#矩阵乘法3*3</span></span><br><span class="line"></span><br><span class="line">np.vstack()<span class="comment">#竖直方向拼接vertically</span></span><br><span class="line">np.hstack()<span class="comment">#水平方拼接horizontally</span></span><br><span class="line">a.T<span class="comment">#矩阵转置</span></span><br></pre></td></tr></table></figure><p>向量和矩阵的索引：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>])</span><br><span class="line">a[<span class="number">0</span>:<span class="number">5</span>]<span class="comment">#0，1，2，3，4，从第一个开始第五个结束</span></span><br><span class="line">a[<span class="number">3</span>:]<span class="comment">#3,4,5,6,7,8,9</span></span><br><span class="line">a[<span class="number">3</span>:-<span class="number">1</span>]<span class="comment">#3,4,5,6,7,8</span></span><br><span class="line">a[:<span class="number">3</span>]<span class="comment">#0,1,2</span></span><br><span class="line"></span><br><span class="line">b=a.reshape(<span class="number">5</span>,<span class="number">2</span>)</span><br><span class="line">b[<span class="number">3</span>,<span class="number">0</span>]<span class="comment">#6</span></span><br><span class="line">b[<span class="number">3</span>]<span class="comment">#[6,7]</span></span><br><span class="line">b[:<span class="number">0</span>]<span class="comment">#[0,2,4,6,8]</span></span><br></pre></td></tr></table></figure><p>Numpy的常用科学计算：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">np.log(<span class="number">2</span>)<span class="comment">#0.69</span></span><br><span class="line">np.exp(<span class="number">2</span>)<span class="comment">#7.38</span></span><br><span class="line"><span class="comment">#作用与向量、矩阵是一样的</span></span><br><span class="line">np.log(a)<span class="comment">#对a中的每个数都求对数</span></span><br><span class="line">np.<span class="built_in">max</span>(a)<span class="comment">#求a之中最大的数</span></span><br><span class="line">np.mean(a)<span class="comment">#平均数</span></span><br><span class="line">np.median(a)<span class="comment">#中值</span></span><br><span class="line">np.std(a)<span class="comment">#方差</span></span><br><span class="line">np.argmax()<span class="comment">#返回最大值的索引</span></span><br><span class="line">np.argmin()</span><br></pre></td></tr></table></figure><p> 生成一个10*10，边界为1，内部为0的矩阵：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">m=np.ones([<span class="number">10</span>,<span class="number">10</span>])</span><br><span class="line">m[<span class="number">1</span>:<span class="number">9</span>,<span class="number">1</span>:<span class="number">9</span>]=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>关于<strong>pandas</strong>：<strong>pandas</strong>是为了解决数据分析任务而创建的。<strong>pandas</strong>纳入了大量库和一些标准的数据模型，提供了高效的操作大型数据集所需的工具。</p><p>关于<strong>matplotlib</strong>:<strong>matplotlib</strong>是基于python语言的开源项目，旨在为python提供一个数据绘图包，实现专业的绘图功能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data=pd.DataFrame([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]),columns=[<span class="string">&quot;number&quot;</span>],index=[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;d&quot;</span>]</span><br></pre></td></tr></table></figure><p>值得一提的是，<strong>pandas</strong>可以直接导入csv文件。关于<strong>pandas</strong>中的数据预处理：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">data1=pd.read_csv(<span class="string">&quot;data.csv&quot;</span>)</span><br><span class="line">data.to_csv(<span class="string">&quot;data_first.csv&quot;</span>)</span><br><span class="line">data1.loc[<span class="number">5</span>,<span class="string">&quot;Age&quot;</span>]<span class="comment">#第一个为index,第二个为columns不可输入数字</span></span><br><span class="line">data1.iloc[<span class="number">6</span>,<span class="number">1</span>]<span class="comment">#两个索引都可以是数字</span></span><br><span class="line"></span><br><span class="line">pd.concat([data,data1])</span><br><span class="line">data2=pd.read_csv(<span class="string">&quot;data.csv&quot;</span>)</span><br><span class="line">data3=pd.concat([data1,data2])</span><br><span class="line">data4=data3.append([data1,data2])</span><br><span class="line"><span class="comment">#有没有的部分会被设成nan</span></span><br><span class="line">data.isnull()<span class="comment">#判断nan的位置</span></span><br><span class="line"><span class="comment">#True的位置为nan</span></span><br><span class="line">data.dropna()<span class="comment">#删去含有nan的行</span></span><br><span class="line">data.fillna(<span class="number">0</span>)<span class="comment">#将nan值全部填为0</span></span><br></pre></td></tr></table></figure><p>关于<strong>pandas</strong>中的常用函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data.drop(<span class="number">2</span>)<span class="comment">#删去第二行(与index对应)</span></span><br><span class="line">data1[<span class="string">&quot;Age&quot;</span>].mean</span><br><span class="line"><span class="comment">#各种函数同numpy</span></span><br><span class="line">data1.sort_values(by=<span class="string">&quot;Age&quot;</span>)<span class="comment">#根据年龄大小进行排序</span></span><br><span class="line">data1.sort_values(by=<span class="string">&quot;Job&quot;</span>)<span class="comment">#根据首字母的顺序进行排序(a开始)</span></span><br><span class="line"></span><br><span class="line">temp=data3[<span class="string">&quot;Age&quot;</span>].values<span class="comment">#array of float</span></span><br><span class="line">data3[<span class="string">&quot;Age&quot;</span>].describe()<span class="comment">#自动统计,快速查看某一列的统计数据</span></span><br></pre></td></tr></table></figure><p>用matplotlib进行画图：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">x=np.linspace(<span class="number">0</span>,<span class="number">10</span>,<span class="number">100</span>)</span><br><span class="line">y=np.six(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x,y)<span class="comment">#将定义的x,y画入图中</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;y&quot;</span>)</span><br><span class="line">plt.title(<span class="string">&quot;asdf123&quot;</span>)</span><br><span class="line">plt.grid(<span class="literal">True</span>)<span class="comment">#背景网格</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>可画出如下的图案：</p><p><img src="../pictures/image-20220130154128301.png" alt="image-20220130154128301"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">y1=np.six(x)</span><br><span class="line">y2=np.exp(x)</span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)<span class="comment">#1行2列第一个图</span></span><br><span class="line"><span class="comment">#将两个图分开</span></span><br><span class="line">plt.plot(x,y1,<span class="string">&quot;r&quot;</span>)<span class="comment">#red</span></span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">plt.plot(x,y2,<span class="string">&quot;g&quot;</span>)<span class="comment">#green</span></span><br></pre></td></tr></table></figure><p>可画出如下的图案：</p><p><img src="../pictures/image-20220130162502084.png" alt="image-20220130162502084"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plt.xlim()<span class="comment">#显示x轴的区间</span></span><br><span class="line">plt.ylim()<span class="comment">#显示y轴的区间</span></span><br><span class="line"><span class="string">&quot;r.&quot;</span><span class="comment">#只有点</span></span><br><span class="line"><span class="string">&quot;r.-&quot;</span><span class="comment">#点行</span></span><br><span class="line"><span class="string">&quot;r--&quot;</span><span class="comment">#虚线连接</span></span><br><span class="line">plt.imshow()<span class="comment">#展示图片</span></span><br></pre></td></tr></table></figure><p>在最后，我们进行简单的网络爬虫的学习。有关<strong>爬虫</strong>：可以自动的获取网页内容的程序，能够高效获得网上的海量数据。</p><p>过程如下：</p><ol><li>通过网址和DNS服务器找到服务器主机。</li><li>发送请求获得浏览器结果。</li><li>解析获得浏览器呈现的结果。</li></ol><p>几种常见的爬虫工具：</p><ol><li>Urllib</li><li>Requests(页面级)</li><li>Scarpy(网站级)</li><li>Selenium</li></ol><p>对于status_code:</p><ol><li>2字头：代表请求已经被服务器成功接收和理解。</li><li>3字头：重新定向。</li><li>4字头：客户端发生错误。</li><li>5，6字头：服务器发生错误或异常。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">data=requests.get(<span class="string">&quot;https://www.csdn.net&quot;</span>)</span><br><span class="line">data.encoding=<span class="string">&quot;utf-8&quot;</span><span class="comment">#显示中文</span></span><br><span class="line">data.text<span class="comment">#网站源代码</span></span><br></pre></td></tr></table></figure><p>爬虫静态网站实战：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">form bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url=<span class="comment">#静态网站网址定义</span></span><br><span class="line">header=&#123;<span class="string">&quot;user-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0&quot;</span>&#125;<span class="comment">#反爬机制</span></span><br><span class="line">data=requests.get(url=url,headers=header)</span><br><span class="line">html=data.text</span><br><span class="line"><span class="comment">#可以运用chrome中的开发者工具</span></span><br><span class="line"></span><br><span class="line">soup=BeautifulSoup(html,<span class="string">&quot;lxml&quot;</span>)</span><br><span class="line">lis=soup.find_all(name=<span class="string">&quot;div&quot;</span>,attrs=<span class="string">&quot;id&quot;</span>:<span class="string">&quot;row355&quot;</span>)</span><br><span class="line"></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> li <span class="keyword">in</span> lis:</span><br><span class="line">    temp=li.find(name=<span class="string">&quot;div&quot;</span>,attrs=&#123;<span class="string">&quot;_index&quot;</span>:<span class="built_in">str</span>(i)&#125;)</span><br><span class="line">i=i+<span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(temp.text)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;python&lt;/strong&gt;开发环境的准备：&lt;em&gt;Anaconda&lt;/em&gt;,&lt;em&gt;Jupyter Notebook&lt;/em&gt;,&lt;em&gt;Spyder&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Numpy&lt;/em&gt;,&lt;em&gt;Pandas&lt;/em&gt;,和&lt;em&gt;Ma</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>About The Git</title>
    <link href="http://example.com/2022/01/14/About-The-Git/"/>
    <id>http://example.com/2022/01/14/About-The-Git/</id>
    <published>2022-01-14T12:22:16.000Z</published>
    <updated>2022-01-19T04:16:14.795Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于git"><a href="#关于git" class="headerlink" title="关于git"></a>关于git</h2><p>在我们运用hexo搭建个人博客的时候，不难发现需要运用到一些关于github仓库的一些知识，因此在这里进行一些基础知识的学习。</p><p> 首先，git本身是一种<strong>分布式版本控制</strong>的系统，它没有”中央服务器“，每个人的电脑上都是一个完整的版本库而且具有高安全性。git是一款免费的，开源的分布式版本控制系统，github是用git做版本控制的代码托管平台。</p><h3 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h3><ol><li>确认秘钥的保存路径。</li><li>如果上一步置顶的保存路径下已经有秘钥文件，则需要确认是否覆盖。</li><li>创建密码。</li><li>确认密码。</li></ol><h3 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h3><ol><li> git status用于查看工作目录当前状态。</li><li> git add用于将修改放入暂存区。(git add.用于所有文件添加)。</li><li>  git commit -m用于将代码文件提交到本地仓库。</li><li>第一次使用时：git remote add origin+路径，添加远程仓库，仓库名为origin。</li><li>git push -u提交到github。</li><li>在github上创建-README md。</li><li>git pull origin master用于获取远程仓库变动并直接更新到本地仓库中。</li></ol><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p>如图：</p><p><img src="../pictures/image-20220116192140249.png"></p><p><img src="../pictures/image-20220116192358870.png"></p><h3 id="Git版本管理"><a href="#Git版本管理" class="headerlink" title="Git版本管理"></a>Git版本管理</h3><ol><li>git log命令显示从最近到最远的提交日志。</li><li> git reset –hard HEAD~2回退到前两个版本。</li><li>git reflog查看命令历史。</li><li>git reset –hard commit_id跳转到对应的版本。</li><li>git status查看当前状态。</li></ol><p><em>ps</em>:这是本人第一次写blog，有很多不足之处，还请大家多多包涵！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;关于git&quot;&gt;&lt;a href=&quot;#关于git&quot; class=&quot;headerlink&quot; title=&quot;关于git&quot;&gt;&lt;/a&gt;关于git&lt;/h2&gt;&lt;p&gt;在我们运用hexo搭建个人博客的时候，不难发现需要运用到一些关于github仓库的一些知识，因此在这里进行一些基础知</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/10/08/hello-world/"/>
    <id>http://example.com/2021/10/08/hello-world/</id>
    <published>2021-10-07T17:07:08.930Z</published>
    <updated>2021-10-07T17:07:08.930Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
